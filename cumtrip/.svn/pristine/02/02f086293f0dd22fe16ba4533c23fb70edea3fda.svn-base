package cumtrip.main.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import com.ibatis.sqlmap.client.SqlMapClient;

import cumtrip.util.SqlMapClientFactory;
import cumtrip.vo.Lo_searchVO;
import cumtrip.vo.MattractVO;
import cumtrip.vo.MemberVO;
import cumtrip.vo.MiddleVO;
import cumtrip.vo.SubPrintVO;


//mapper접근 - SqlMapClient객체가 필요
//dao클래스 객체 생성 - 리턴 - service에서 사용


public class MemberDaolmpl implements IMemberDao {

	private SqlMapClient client;
	private static IMemberDao dao;
	
	private MemberDaolmpl() {
		client = SqlMapClientFactory.getsqlMapClient();
	}
	
	public static IMemberDao getInstance() {
		if( dao == null ) dao = new MemberDaolmpl();
		return dao;
	}
	


	

	@Override
	public MemberVO Count(String id) throws SQLException {

		return (MemberVO)client.queryForObject("member.memberCount", id);
	}


	
	
	@Override
	public String insert(MemberVO vo) throws SQLException {

			return (String)client.insert("member.memberInsert", vo);
		}
	
	//로그인
	@Override
	public MemberVO getMember(MemberVO memVo)throws SQLException{
		return (MemberVO)client.queryForObject("member.memberLogin", memVo);
	
	}

	@Override
	public List<Lo_searchVO> getSido() throws SQLException{
		
		return client.queryForList("main.sidomain");
	}
	
	
	
	//아이디찾기
	@Override
	public MemberVO idFind(MemberVO vo) throws SQLException {
		return (MemberVO)client.queryForObject("member.memberidFind", vo);
	}

	//비밀번호 찾기
	@Override
	public MemberVO passFind(MemberVO vo) throws SQLException {
		return (MemberVO)client.queryForObject("member.memberPassFind", vo);
	}

	//비밀번호 변경
	@Override
	public int PassSetFind( MemberVO vo ) throws SQLException {
		return (int)client.update("member.memberPassSetFind", vo);
		
	}

	@Override
	public int updateMember_Mypage(MemberVO vo) throws SQLException {
		return (int)client.update("member.updateMember_Mypage", vo);
	}

	
	@Override
	public int deleteMember_Mypage(MemberVO vo) throws SQLException {
		return (int)client.update("member.deleteMember_Mypage", vo);
	}


	@Override
	public List<SubPrintVO> maintourlist() throws SQLException {
		
		return client.queryForList("main.maintourlist");
	}

	@Override
	public List<SubPrintVO> maintourlist2() throws SQLException {
		
		return client.queryForList("main.maintourlist2");
	}

	@Override
	public List<SubPrintVO> maintourlist3() throws SQLException {
		// TODO Auto-generated method stub
		return client.queryForList("main.maintourlist3");
	}


	//좋아요
	@Override
	public List<MemberVO> likeMypage01( Map<String,String> id ) throws SQLException {
		return client.queryForList("member.likeMypage01", id);
	}
	
	
	//여행좋아요
	@Override
	public List<MemberVO> likeMypage02( Map<String,String> id ) throws SQLException {
		return client.queryForList("member.likeMypage02", id);
	}
	

	//찜풀기m
	@Override
		public int likeMypagedelect( MemberVO vo )throws SQLException{
		return client.delete("member.likeMypageDelete01", vo);
	}

	//찜풀기s
	@Override
	public int likeMypagedelect2(MemberVO vo) throws SQLException {
		return client.delete("member.likeMypageDelete02", vo);
	}

	//마이페이지 리뷰
	@Override
	public List<MemberVO> reviweMypage01(Map<String, String> id) throws SQLException {
		return client.queryForList("member.reviweMypage01", id);
	}


	@Override
	public List<SubPrintVO> mainrandomtourlist() throws SQLException {
		return client.queryForList("main.mainrandomtourlist");
	}



	@Override
	public List<MemberVO> payMypage01(String id) throws SQLException {
		// TODO Auto-generated method stub
		return client.queryForList("member.payMypage01", id);
	}

	@Override
	public List<SubPrintVO> mainrectourlist() throws SQLException {
	
		return client.queryForList("main.mainrectourlist");
	}

	@Override
	public String mattractcheck(String id) throws SQLException {
		
		return (String) client.queryForObject("main.mattractcheck",id);
	}

	@Override
	public int mattractinsert(MattractVO vo) throws SQLException {
		int result = 0;
		
		Object temp = null;
		  temp = client.insert("main.mattractinsert",vo);
		  if(temp == null) {
			  result = 1;
		  }
				  
		return result; 
	}

	@Override
	public List<SubPrintVO> mainattrtourlist(String id) {
		List<SubPrintVO> list = null;
		
		 try {
			list = client.queryForList("main.mainattrtourlist",id);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return list;
	}

	@Override
	public int likeMypageDelete03(MemberVO vo) throws SQLException {
		return client.delete("member.likeMypageDelete03", vo);
	}

	@Override
	public int likeMypageDelete04(MemberVO vo) throws SQLException {
		return client.delete("member.likeMypageDelete04", vo);
	}


	

	
	
	
	}







